TODO:


--scr_get_input (DONE)

--handle output
--- change angle towards desired object
--- handle thrust 
--- handle boost
--- handle shield (3 turns of shutdown)

--- for testing purposes, make the next poitn to move to fixed to the mouse with fixed thrust
--- keypress for boost



--Collisions between different objects
-- If not at next checkpoints within 100 steps, give up (deactivate)
-- turn on and off the collisions
-- run the LVL until the pods have finished racing/they ran out of steps.
-- Get a fitness function to determine how the things did.


--perhaps run X number of steps each time.

--Create our NN (determine layers and number of neurons) (DONE)
-- Create the NN feedforward function (DONE)
-- Initialize neural network for each pod (DONE)
-- initialize values for neural network (all initial weights and biasses)  (DONE)

-- normalize the inputs of the neural network (such as x and y between 0 and 1, angle relative between -1 and 1, etc)
///normalize(input, min, max)
var _x = (argument0-argument1)/(argument2-argument1);
return(_x);



-- Get ourselves some Tanh activation function after each tneuron,    (DONE)



-- Create a way to pass on neural networks to the next generation (mix and match)
-- Mutate a certain number of neurons
-- be able to print the best neural network to a format we can read from a txt file

- Get rewards function: 
--- reaching the next checkpoint
--- how many steps it took



--- ranking each of the pods based on this
	
